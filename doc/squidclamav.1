.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQUIDCLAMAV 1"
.TH SQUIDCLAMAV 1 "2015-05-11" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SquidClamav v6 \- HTTP Antivirus for Squid based on ClamAv and the ICAP protocol
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
SquidClamav v6 is an antivirus for the Squid proxy based on the \s-1ICAP\s0 protocol
and the awards-winning ClamAv anti-virus toolkit. Using it will help you
securing your home or enterprise network web traffic. SquidClamav is the most
efficient antivirus tool for \s-1HTTP\s0 traffic available for free, it is written
in C as a c\-icap service and can handle several thousands of connections at once.
.PP
SquidClamav v6 only scan the \s-1HTTP\s0 stream sent by Squid through the \s-1ICAP\s0 server.
It doesn't make \s-1HTTP\s0 requests itself so this is a gain of performance and ensures
that the data scanned is the same as the user has requested.
.PP
Why use c\-icap server? This is the only open source icap server written in C,
it is very fast and stable.
.PP
Why writing another clamav c\-icap module? Well, to be honest, outside the
survival of SquidClamav, I think that using clamd instead of libclamav to scan
files is speediest and more simple than the srv_clamav module provided with the
c\-icap server.
.PP
SquidClamav v6 is faster than any other \s-1HTTP\s0 antivirus and can handle several
thousands of simultaneous users at once, this is what we need.
.PP
The other unique feature of SquidClamav is that you can have Clamd failover by
setting up up to 4 clamd server \s-1IP\s0 addresses. When a clamd server is not reachable
in one second, SquidClamav switches to the next \s-1IP\s0 address.
.PP
If you are using ClamAV above 0.95, SquidClamav will have support for Google
Safe Browsing database. All signatures provided by Google Safe Browsing Database
will be prefixed with the Safebrowsing tag. If ClamAV reports:
.PP
.Vb 1
\&        Safebrowsing.<something> FOUND
.Ve
.PP
This will be redirected by squidclamav just like if a virus was found.
.SH "USAGE"
.IX Header "USAGE"
.SS "Generic Program Information"
.IX Subsection "Generic Program Information"
SquidClamav v6 has been completely rewritten to be used through the Squid v3.x
\&\s-1ICAP\s0 feature allowing \*(L"on stream\*(R" scanning. It is now built as a c\-icap server
service but keeps all features from v5 and is fully compatible with the old
SquidClamav configuration file. The squidclamav configuration file is unchanged
minus some obsolete directives.
.PP
This also means that SquidClamav can no more be run into an interactive console
for testing your \s-1URL\s0. All debug information will now go to the c\-icap logfile.
.SS "Installing Squid"
.IX Subsection "Installing Squid"
.SS "Setting SquidClamav as Squid Icap service"
.IX Subsection "Setting SquidClamav as Squid Icap service"
I want SquidClamav to be installed as a c\-icap service, to be configured as
easy as possible and to be compatible with the old configuration file. This 
means that I voluntary omit some capabilities of c\-icap server to preserve a 
full compatibility with the old squidclamav.conf file.
.PP
\fISquid v3.x installation and configuration\fR
.IX Subsection "Squid v3.x installation and configuration"
.PP
To have full and stable icap support with Squid you must use the 3.x branch
and configure squid with the following option:
.PP
.Vb 1
\&        \-\-enable\-icap\-client
.Ve
.PP
I don't know what other options you are using but you have to add this one
to your configure command. If you prefer to use distribution packaging you
may already have it configured like this if you can install the c\-icap 
package too.
.PP
If you don't know, run the following command an search for the configuration
directive: \-\-enable\-icap\-client
.PP
.Vb 1
\&        /usr/local/squid/sbin/squid \-v | grep "enable\-icap\-client"
.Ve
.PP
If it is not enable you must reinstall Squid with this configuration option or
install the additional packages.
.PP
Once you have it enabled, to integrate c\-icap and SquidClamav to your squid
cache just edit squid.conf and set the following directives.
.IP "Squid 3.4.x configuration" 4
.IX Item "Squid 3.4.x configuration"
There are some configuration differences between 3.1.x and 3.4.x Squid version.
Here are the directives I use for Squid 3.4.x:
.Sp
.Vb 10
\&        icap_enable on
\&        icap_send_client_ip on
\&        icap_send_client_username on
\&        icap_client_username_encode off
\&        icap_client_username_header X\-Authenticated\-User
\&        icap_preview_enable on
\&        icap_preview_size 1024
\&        icap_service service_avi_req reqmod_precache
\&        icap://localhost:1344/squidclamav bypass=off
\&        adaptation_access service_avi_req allow all
\&        icap_service service_avi_resp respmod_precache
\&        icap://localhost:1344/squidclamav bypass=on
\&        adaptation_access service_avi_resp allow all
.Ve
.Sp
If you don't know where to put them in squid.conf, just search for 'icap_.*'
and add those configuration lines at the end of the icap section.
.IP "Squid 3.1.x configuration" 4
.IX Item "Squid 3.1.x configuration"
There are some configuration differences between 3.1.x and 3.0.x Squid version.
Here are the directives I use for Squid 3.1.x:
.Sp
.Vb 11
\&        icap_enable on
\&        icap_send_client_ip on
\&        icap_send_client_username on
\&        icap_client_username_encode off
\&        icap_client_username_header X\-Authenticated\-User
\&        icap_preview_enable on
\&        icap_preview_size 1024
\&        icap_service service_req reqmod_precache bypass=1 icap://127.0.0.1:1344/squidclamav
\&        adaptation_access service_req allow all
\&        icap_service service_resp respmod_precache bypass=1 icap://127.0.0.1:1344/squidclamav
\&        adaptation_access service_resp allow all
.Ve
.Sp
If you don't know where to put them in squid.conf, just search for 'icap_.*'
and add those configuration lines at the end of the icap section.
.Sp
Here the bypass is set to 1, that means that in case of squidclamav problems
squid will simply ignore the error and continue. This is the equivalent of the
bridge mode in version 5.x of suidclamav.
.IP "Squid 3.0.x configuration" 4
.IX Item "Squid 3.0.x configuration"
For squid 3.0.x you must replace 'bypass=1' by '1' or 'bypass=0' by '0' and
the access to the service is defined at a class level. Only the last four
configuration lines change from version 3.1.x.
.Sp
.Vb 10
\&        icap_enable on
\&        icap_send_client_ip on
\&        icap_send_client_username on
\&        icap_client_username_encode off
\&        icap_client_username_header X\-Authenticated\-User
\&        icap_preview_enable on
\&        icap_preview_size 1024
\&        icap_service service_req reqmod_precache 1 icap://127.0.0.1:1344/squidclamav
\&        icap_service service_resp respmod_precache 1 icap://127.0.0.1:1344/squidclamav
\&        icap_class class_avreq service_req
\&        icap_class class_avresp service_resp
\&        icap_access class_avreq allow all
\&        icap_access class_avresp allow all
.Ve
.Sp
If you don't know where to put them in squid.conf, just search for 'icap_.*'
and add those configuration lines at the end of the icap section.
.Sp
Here the bypass is set to 1, that means that in case of squidclamav problems
squid will simply ignore the error and continue. This is the equivalent of the
bridge mode in version 5.x of suidclamav.
.PP
What do that configuration directives do? They enable Squid's \s-1ICAP\s0 client and 
tell Squid to send the logged username and client's \s-1IP\s0 address to the \s-1ICAP\s0 server. 
They also enable preview for faster SquidClamav work. The last four lines define 
how to call the \s-1ICAP\s0 server. Here we call the squidclamav service on localhost and
port 1344 (host and port can be changed). The bypass parameter set to 1 means that 
Squid will continue without bothering about \s-1ICAP\s0 server or SquidClamav failure. This 
is just like the old bridge mode in previous releases of SquidClamAV. I don't want 
users to be bored by a continuously error message if SquidClamav or c\-icap produce
errors or if there's an error in the configuration file. Users don't have to know 
about that, they want to surf and don't care about your problems :\-) 
If you don't think like me, just set the bypass argument to 0 and Squid will return 
an error message in case of a failure.
.PP
\fIC\-icap server installation/configuration\fR
.IX Subsection "C-icap server installation/configuration"
.PP
If you don't have package solutions or encounter problems when installing SquidClamav
I recommand you to install the c\-icap server from source as following. You can
download it from SourceForge at http://c\-icap.sourceforge.net/. Choose version
c\-icap\-0.3.2 or later versions, then run:
.PP
.Vb 3
\&        ./configure \-\-prefix=/usr/local/c\-icap \-\-enable\-large\-files
\&        make
\&        make install
.Ve
.PP
Then, edit the file /usr/local/c\-icap/etc/c\-icap.conf. It contains a set of
documented values that configure the c\-icap server. To enable the support of
SquidClamav just add the following line to the end of the file:
.PP
.Vb 1
\&        Service squidclamav squidclamav.so
.Ve
.PP
Don't care about the srv_clamav.* configuration directives, this will not break
anything. SquidClamav doesn't use them but reads its own directives from the file
/etc/squidclamav.conf.
.PP
You can disable the c\-icap embedded modules by commenting out these lines:
.PP
.Vb 2
\&        #Service url_check_module srv_url_check.so
\&        #Service antivirus_module srv_clamav.so
.Ve
.PP
This will preserve some resources.
.PP
Following your installation you may need to create the /var/run/c\-icap/ where
c\-icap server is writing pid and socket file.
.PP
You may also want to change the user/group owning c\-icap's processes. By default
the owner is the user/group who runs the program. I recommand you to change them
to the same user/group running your Squid cache. For example:
.PP
.Vb 2
\&        User proxy
\&        Group proxy
.Ve
.PP
Of course you will need to change the owner of directory /var/run/c\-icap/ and
the directory of your server log. See the ServerLog directive to get the path.
For me, I use the following commands to set the good rights on my installation:
.PP
.Vb 3
\&        mkdir /var/run/c\-icap/
\&        chown \-R proxy:proxy /var/run/c\-icap/
\&        chown \-R proxy:proxy /usr/local/c\-icap/
.Ve
.PP
After that you can run the c\-icap server as explained below.
.PP
\fISquidClamav installation/configuration\fR
.IX Subsection "SquidClamav installation/configuration"
.PP
Installing SquidClamav requires that you already have installed the c\-icap
as explained above. You must provide the installation path of c\-icap to the
configure command as following:
.PP
.Vb 3
\&        ./configure
\&        make
\&        make install
.Ve
.PP
This will install the squidclamav.so library into the c\-icap modules/services
repository.
.PP
Note that if the c\-icap installation does not save the c\-icap-config program in
a directory that can be found in your default path you will need to give the
path to this program to squidclamav at configure time:
.PP
.Vb 2
\&        ./configure \-\-with\-c\-icap=/usr/local/c\-icap/
\&        make && make install
.Ve
.PP
\fIRunning c\-icap server\fR
.IX Subsection "Running c-icap server"
.PP
Finally, you can run the c\-icap server as root user:
.PP
.Vb 1
\&        /usr/local/c\-icap/bin/c\-icap
.Ve
.PP
or any other path to the binary. If you want to display debugging information
on the terminal, the previous command should be executed with the following
arguments:
.PP
.Vb 1
\&        /usr/local/c\-icap/bin/c\-icap \-N \-D \-d 10
.Ve
.PP
The first argument \-N prevents the c\-icap server from forking into the background,
the second argument \-D enables the printing of messages to standard output, and
the third argument \-d 10 enables the printing of full debugging information.
.PP
\fIReloading configuration without restarting the c\-icap server\fR
.IX Subsection "Reloading configuration without restarting the c-icap server"
.PP
To force SquidClamav to reread its configuration file after changes you can
send the following command to the c\-icap server
.PP
.Vb 1
\&        echo \-n "squidclamav:cfgreload" > /var/run/c\-icap/c\-icap.ctl
.Ve
.PP
It will reread all its configuration directives and restart pipes to squidGuard.
So if you make changes to squidGuard you must execute this command to activate
them in SquidClamav.
.PP
Or to be sure that everything is really initialized or that you have made change 
to the c\-icap configuration file you can run the following command:
.PP
.Vb 1
\&        echo \-n "reconfigure" > /var/run/c\-icap/c\-icap.ctl
.Ve
.PP
The service will reread the config file without the need for stopping and restarting
the c\-icap server. The service will just be reinitialized.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
By default, the configuration file must be /etc/squidclamav.conf, you may not
use an other path unless you change it in the source code (see src/squidclamav.h).
.PP
SquidClamav installation will create a default file with the maximum security
level. If you have low resources on your server there's some predefined pattern
optimized for speed. Feel free to modify it to match your desired security level.
.PP
The format of the configuration file consists in always lower case configuration
directive names followed by a value. The name and the value must be separated by
a single space character. Comments are lines starting with a '#' character.
.SS "Global configuration"
.IX Subsection "Global configuration"
\fILog file and debug\fR
.IX Subsection "Log file and debug"
.PP
In version 6.x the directives 'logfile', 'debug' and 'stat' are obsolete as
logging and debug are now handled by the c\-icap server. You can control them
using the following c\-icap.conf directives:
.PP
.Vb 2
\&        ServerLog /usr/local/c\-icap/var/log/server.log
\&        DebugLevel 0
.Ve
.PP
Debug information is disable by default, do not enable it on production
systems as it costs a lot of performance. The debug level can be set
from 1 up to 3 for SquidClamav but can be up to 10 for c\-icap.
.PP
\fIClamd daemon\fR
.IX Subsection "Clamd daemon"
.PP
SquidClamav needs to know where to contact clamd, the ClamAV daemon, for on
stream virus scanning.
.PP
.Vb 3
\&        clamd_local /tmp/clamd
\&        #clamd_ip 192.168.1.5
\&        #clamd_port 3310
.Ve
.PP
By default SquidClamav will contact clamd locally on the /tmp/clamd unix socket
(clamd_local). If your clamd daemon uses \s-1INET\s0 socket or stays in a remote server,
you have to set the \s-1IP\s0 address and the port with clamd_ip and clamd_port.
.PP
If you use \s-1INET\s0 socket the 'clamd_local' directive must be commented, or
SquidClamav will always use the clamd_local directive.
.PP
\fIClamd failover\fR
.IX Subsection "Clamd failover"
.PP
If you have multiple ClamAv servers, SquidClamav is able to do failover between
them. You just have to set 'clamd_ip' to a list of \s-1IP\s0 adresses separated by a
comma. Do not insert space characters in this list or it will break all. For example:
.PP
.Vb 3
\&        clamd_ip 192.168.1.5,192.168.1.13,192.168.1.9
\&        clamd_port 3310
\&        timeout 1
.Ve
.PP
You can set up to 5 clamd servers. The clamd port must be the same for all these
servers as 'clamd_port' only accepts one single value.
.PP
SquidClamav will always connect to the first \s-1IP\s0 address available. If this fails
it will try the next defined \s-1IP\s0 address after 1 second. When a connect
can be established SquidClamav will reuse this last \*(L"working\*(R" \s-1IP\s0 address first to
not slow down process the next time.
.PP
If you think 1 second is a low value, you can change the connect timeout by
editing file squidclamav.conf and set the 'timeout' directive to a higher value. For example :
.PP
.Vb 1
\&        timeout 2
.Ve
.PP
Value must be set in seconds. Do not set it too high (< 5) or you can slow down
everything.
.PP
\fIRedirection\fR
.IX Subsection "Redirection"
.PP
\s-1URL\s0 redirect
.IX Subsection "URL redirect"
.PP
When a virus is detected SquidClamav needs to redirect the client to a warning
page. The SquidClamav distribution contains a set of Perl \s-1CGI\s0 scripts
with different languages that you can use. To specify this redirection you have
to have to specify a redirect \s-1URL\s0 to the 'redirect' directive as follow:
.PP
.Vb 1
\&        redirect http://proxy.samse.fr/cgi\-bin/clwarn.cgi
.Ve
.PP
Take a look in the cgi-bin directory to see all translations of this cgi script.
.PP
Squidclamav will pass the following parameters to this \s-1CGI:\s0
.PP
.Vb 4
\&        url=ORIGNAL_HTTP_REQUEST
\&        virus=NAME_OF_THE_VIRUS
\&        source=DOWNLOADER_IP_ADDRESS
\&        user=DOWNLOADER_IDENT
.Ve
.PP
If this directive is disabled squidclamav will use c\-icap error templates
 to report issues. See below.
.PP
Using c\-icap template instead of redirect scripts
.IX Subsection "Using c-icap template instead of redirect scripts"
.PP
If the redirect directive is not set, SquidClamav will attempt to load a template
up from disk and send this back to the user. By default this template is found at
the following path:
.PP
.Vb 1
\&        /usr/share/c_icap/templates/squidclamav/en/MALWARE_FOUND
.Ve
.PP
Available format tokens are all of those available to the LogFormat directive
of c\-icap, plus an additional token:
.PP
.Vb 1
\&        %mn \- formatted name of the malware, as given by ClamAV.
.Ve
.PP
Notice redirection into log file
.IX Subsection "Notice redirection into log file"
.PP
To log every redirection enable the 'logredir' configuration directive:
.PP
.Vb 1
\&        logredir 1
.Ve
.PP
By default it is disabled as you can also log this information with the
cgi-script or send an email.
.PP
\fIChained Url Checker\fR
.IX Subsection "Chained Url Checker"
.PP
The squidguard directive is preserved for backward compatibility but you
must remove it from your configuration file as it could result in many
squidclamav crashes.
.PP
Please use the 'url_rewrite_program' squid.conf directive instead to call
squidGuard.
.PP
.Vb 3
\&        url_rewrite_program /usr/bin/squidGuard
\&        url_rewrite_children 15
\&        url_rewrite_access allow all
.Ve
.PP
If you still want to use it, SquidClamav allows you to chain the SquidGuard
program to check the \s-1URL\s0 requested against blocklists using the 'squidguard'
directive. You just have to give the path to the program.
.PP
.Vb 1
\&        squidguard /usr/local/squidGuard/bin/squidGuard
.Ve
.PP
The chained program is called before the virus scan and any other SquidClamav
operations. The call to this program can be disabled with the 'whitelist',
\&'trustuser' and 'trustclient' directives. See SquidClamav Patterns for more
information.
.PP
To log every chained program redirection enable the 'logredir' configuration
directive as following:
.PP
.Vb 1
\&        logredir 1
.Ve
.PP
By default it is disabled as you can also log this information with squidguard.
.PP
\fIMaxsize\fR
.IX Subsection "Maxsize"
.PP
This directive allows to disable virus scan completely for files bigger than the
value in bytes. Default is 0, no size limit as you may want to control download
size into squid.conf or clamd.
.PP
.Vb 1
\&        maxsize 2000000
.Ve
.PP
If you want to abort virus scan after a certain amount of data you must take a
look at the clamd configuration directive 'StreamMaxLength' that will close a
stream when the given size is reached.
.SS "Controlling SquidClamav behaviour"
.IX Subsection "Controlling SquidClamav behaviour"
As in SquidClamav v5.x, v6.0 will scan all downloaded files by default.
You have five directives to control the way things must work.
.PP
All these directives used extended regex pattern matching and are case
insensitive.
.PP
\fIControl both chained program and virus scan\fR
.IX Subsection "Control both chained program and virus scan"
.PP
There are 3 configuration directives that allow you to disable virus scan and
call to chained redirector like SquidGuard. Those pattern matchings are searched
as soon as a Squid entry is received.
.IP "whitelist" 4
.IX Item "whitelist"
The 'whitelist' configuration directive allows you to disable chained program
and virus scan at \s-1URL\s0 level. When the given pattern matches the \s-1URL\s0, SquidClamav
falls back to Squid instantly.
.Sp
For example:
.Sp
.Vb 1
\&        whitelist \e.clamav\e.net
.Ve
.Sp
will deliver any files from hosts on clamav.net domain directly.
.Sp
You can alse use a file containing all regex that might be whitelisted and
provide the file name to the whitelist dorective. Suppose that you have a
file named /usr/local/c\-icap/etc/sc_whitelist with the following content:
.Sp
.Vb 2
\&        \e.clamav\e.net
\&        \e.darold\e.net
.Ve
.Sp
then you just have to set whitelist in squidclamav.conf as follow:
.Sp
.Vb 1
\&        whitelist /usr/local/c\-icap/etc/sc_whitelist
.Ve
.Sp
the file must contain only one regex per line and no extra character.
.IP "trustuser" 4
.IX Item "trustuser"
The 'trustuser' directive allows you to disable chained program and virus scan
when an ident matches the search pattern. On regex found SquidClamav falls back to
Squid instantly. Of course you must have Squid authentication helper enabled.
.Sp
For example:
.Sp
.Vb 1
\&        trustuser administrator
.Ve
.Sp
will let user logged as administrator to not be bored by chained program and
virus scan.
.IP "trustclient" 4
.IX Item "trustclient"
The 'trustclient' directive allows you to disable chained program and virus scan
if the client source \s-1IP\s0 address or \s-1DNS\s0 name match the search pattern. The source
\&\s-1IP\s0 address can be a single \s-1IP\s0 address or an address range following the given regex pattern.
.Sp
For example:
.Sp
.Vb 3
\&        trustclient ^192\e.168\e.1\e.1$
\&        trustclient ^192\e.168\e.1\e..*$
\&        trustclient ^mypc\e.domain\e.dom$
.Ve
.Sp
The first and the last entry will disable chained program and virus scan for a
single computer and the second will do for en entire class C network.
.IP "dnslookup" 4
.IX Item "dnslookup"
Enable / disable \s-1DNS\s0 lookup of client \s-1IP\s0 address. Default is enabled '1' to
preserve backward compatibility but you must deactivate this feature if you
don't use trustclient with hostname in the regexp or if you don't have a \s-1DNS\s0
on your network. Disabling it will also speed up squidclamav.
.PP
\fISafebrowsing\fR
.IX Subsection "Safebrowsing"
.PP
ClamAV 0.95 introduced support for Google Safe Browsing database.  The database
is packed inside a \s-1CVD\s0 file and distributed through our mirror network as
safebrowsing.cvd. This feature is disabled by default on all clamav installations.
.PP
In order to enable this feature, you must first add a\*^XXSafeBrowsing Yesa\*^XX to freshclam.conf.
There is no option in clamd.conf. If the engine finds Google Safe Browsing files in the
database directory, ClamAV will enable safe browsing. To turn it off you need to update
freshclam.conf and remove the safebrowsing files from the database directory before
restarting clamd.
.PP
Then to enable this feature into SquidClamav you have to enable the following
configuration directive.
.IP "safebrowsing" 4
.IX Item "safebrowsing"
Enable / Disable Clamav Safe Browsing feature. You mus have enabled the
corresponding behavior in clamd by enabling SafeBrowsing into freshclam.conf
Enabling it will first make a safe browsing request to clamd and then the
virus scan request.
.PP
\fIControl virus scan\fR
.IX Subsection "Control virus scan"
.PP
There are 3 configuration directives that allow you to disable virus scan for
downloaded files.
.IP "abort" 4
.IX Item "abort"
The 'abort' directive will let you disable virus scanning at \s-1URL\s0 level (not
chained program). When the \s-1URL\s0 matches the regex pattern, SquidClamav falls back to
Squid immediately after the call to the chained program, if one is defined there.
.Sp
For example:
.Sp
.Vb 2
\&        abort \e.squid\-cache\e.org
\&        abort .*\e.(png|gif|jpg)$
.Ve
.Sp
The first regexp will exclude any file hosted on domain squid\-cache.org from virus scanning, 
the last one will exclude all \s-1PNG\s0, \s-1GIF\s0 and \s-1JPEG\s0 image from scanning.
.IP "abortcontent" 4
.IX Item "abortcontent"
The 'abortcontent' directive allows you to exclude any file from virus scanning,
whose Content-Type matches the regex pattern. This directive costs more time
because SquidClamav needs to download the \s-1HTTP\s0 header for a file with a \s-1HEAD\s0
request. Note that some sites do not answer to \s-1HEAD\s0 requests so the content type
will not be able to be retrieved so they will be scanned.
.Sp
Example:
.Sp
.Vb 2
\&        abortcontent ^image\e/.*$
\&        abortcontent ^video\e/x\-flv$
.Ve
.Sp
The first directive will complete the \*(L"abort .*\e.(png|gif|jpg)$\*(R" previous
directive to match dynamic image or with parameters at end. The second will
allow your users to view streamed video instantly.
.IP "maxsize" 4
.IX Item "maxsize"
As said above, the 'maxsize' directive allows you not to scan a file when the
content-length of the file is bigger than the defined value. By default there's
no size limit.
.SS "Testing SquidClamav"
.IX Subsection "Testing SquidClamav"
As SquidClamav v6.0 is now a c\-icap service, it can no more be run at console
in interactive mode. To check what is going wrong, you must edit c\-icap.conf
file, set DebugLevel to 3 and enable ServerLog. Then check for lines with
squidclamav string in the log file which is defined with ServerLog in squidclamav's config.
.SS "Performance"
.IX Subsection "Performance"
With SquidClamav v6.x the way to tune your service is to tune c\-icap server and
clamd daemon. On heavy http access, putting the clamd daemon on a dedicated
server with multiple \s-1CPU\s0 will really help.
.PP
If you experience Squid \*(L"\s-1ICAP\s0 protocol error\*(R" (with bypass enabled) please
consider increasing the following c\-icp parameters: StartServers, MaxServers,
MinSpareThreads, MaxSpareThreads, ThreadsPerChild. Increasing MaxThreads parameter
in clamd.conf may also help.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs, patches, discussion, etc. to <gilles \s-1AT\s0 darold \s-1DOT\s0 net>.
.SH "FEATURE REQUESTS"
.IX Header "FEATURE REQUESTS"
If you need new features let me know at <gilles \s-1AT\s0 darold \s-1DOT\s0 net>. This helps
a lot to develop a better/useful tool.
.SH "HOW TO CONTRIBUTE ?"
.IX Header "HOW TO CONTRIBUTE ?"
Any contribution to build a better tool is welcome, you just have to send me
your ideas, features requests or patches and they will be applied.
.SH "AUTHOR"
.IX Header "AUTHOR"
Gilles Darold <gilles \s-1AT\s0 darold \s-1DOT\s0 net>
.SH "ACKNOWLEDGEMENT"
.IX Header "ACKNOWLEDGEMENT"
Thanks to Squid\-cache.org, Clamav.net and c\-icap.sf.net for their great
software.
.PP
Special thanks to Christos Tsantilas for his implementation of the
c\-icap server. Lots of SquidClamav v6 source code has been learned
or simply cut and pasted from the source code of his clamav service.
.PP
I must also thank all the great contributors:
.PP
.Vb 4
\&        \- Leonardo Humberto Liporati from www.ig.com.br
\&        \- Dale Laushman from The Uptime Group
\&        \- Rainer schoepf from Proteosys.com
\&        \- Yann Ormanns
.Ve
.PP
and all others who help me to build a useful and reliable product.
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 2005\-2015 Gilles Darold \- All rights reserved.
.PP
Some code is Copyright (C) 2004\-2008 Christos Tsantilas
.PP
This program is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program.  If not, see < http://www.gnu.org/licenses/ >.
